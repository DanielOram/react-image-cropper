{"version":3,"sources":["components/NavBar.jsx","components/Footer.jsx","components/Preview.jsx","components/InfoModal.jsx","components/CanvasArea.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","href","class","id","data-target","Footer","Preview","style","width","height","float","display","alignItems","justifyContent","overflow","maxHeight","InfoModal","CanvasArea","useState","image","setImage","aspectRatio","cropper","setCropper","cropData","setCropData","hasCropped","setHasCropped","handleAspectRatioChange","newAspectRatio","setAspectRatio","minHeight","maxWidth","src","alt","download","onClick","preview","initialAspectRatio","onInitialized","instance","type","onChange","event","files","preventDefault","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","placeholder","textAlign","reset","console","log","getCroppedCanvas","toDataURL","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","addEventListener","elems","querySelectorAll","M","Modal","init","Sidenav"],"mappings":"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","file":"static/js/main.268b8754.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function NavBar() {\n    return (\n        <>\n            <nav>\n                <div className=\"nav-wrapper\">\n                    <a href=\"#\" className=\"brand-logo center\"><i class=\"material-icons\">crop</i>React Cropper</a>\n                    <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n                        <li><a data-target=\"modal1\" class=\"waves-effect waves-light btn btn-large modal-trigger\"><i class=\"material-icons\">help_outline</i></a></li>\n                    </ul>\n                    <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n                    <ul class=\"right hide-on-med-and-down\">\n                        {/* <li><a href=\"https://www.linkedin.com/in/danieloram1/\">About Me</a></li> */}\n                        <li><a href=\"https://github.com/DanielOram/react-image-cropper\">Github</a></li>\n                        <li><a href=\"https://stackoverflow.com/users/4486146/danoram\">StackOverflow</a></li>\n                        <li><a href=\"https://www.linkedin.com/in/danieloram1/\">Linked In</a></li>\n                    </ul>\n                </div>\n            </nav>\n            <ul class=\"sidenav\" id=\"mobile-demo\">\n                <li><a data-target=\"modal1\" class=\"waves-effect waves-light btn btn-large modal-trigger\"><span>How to Use<i class=\"material-icons right\">help_outline</i></span></a></li>\n                {/* <li><a href=\"\">About Me<i class=\"material-icons right\">info_outline</i></a></li> */}\n                <li><a href=\"https://github.com/DanielOram/react-image-cropper\">Github<i class=\"material-icons right\">code</i></a></li>\n                <li><a href=\"https://stackoverflow.com/users/4486146/danoram\">StackOverflow<i class=\"material-icons right\">code</i></a></li>\n                <li><a href=\"https://www.linkedin.com/in/danieloram1/\">Linked In<i class=\"material-icons right\">info_outline</i></a></li>\n            </ul>\n        </>\n    )\n}","import React from \"react\";\n\nexport default function Footer() {\n    return (\n        <footer className=\"page-footer\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col l6 s12\">\n                <h5 className=\"white-text\">Created by Daniel Oram.</h5>\n                <p className=\"grey-text text-lighten-4\">A webapp for cropping and downloading images using React.</p>\n              </div>\n              <div className=\"col l4 offset-l2 s12\">\n                <h5 className=\"white-text\">Links</h5>\n                <ul>\n                  {/* <li><a className=\"grey-text text-lighten-3\" href=\"https://www.linkedin.com/in/danieloram1/\">About Me</a></li> */}\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://github.com/DanielOram/react-image-cropper\">Github</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://stackoverflow.com/users/4486146/danoram\">StackOverflow</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://www.linkedin.com/in/danieloram1/\">Linked In</a></li>\n                  \n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer-copyright\">\n            <div className=\"container\">\n            Â© 2021 Daniel Oram\n            {/* <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a> */}\n            </div>\n          </div>\n        </footer>\n    )\n}","import React from 'react';\n\nexport default function Preview() {\n    const previewWidth = 200;\n    const previewHeight = 200;\n\n    return (\n        <div className=\"crop-preview-container\" style={{ width: \"100%\", height: 200, float: \"right\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n            <div \n                className=\"crop-preview\"\n                style={{width: \"100%\", height: \"inherit\", overflow: \"hidden\", maxHeight: \"100%\" }}>\n            </div>\n        </div>\n        \n    )\n}","import React from 'react';\n\nexport default function InfoModal() {\n    return (\n        <div>\n            {/* Modal Content */}\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>React Cropper</h4>\n                    <p>Double click the cropping canvas to toggle between moving the selected image and creating a cropping area.</p>\n                    <p>Press 'RESET' to return the cropping canvas back to it's default position and aspect ratio.</p>\n                    <p>Press 'FREEFORM' to be able to manually change the aspect ratio of the crop.</p>\n                    <p>Scroll to zoom in and out.</p>\n                </div>\n                <div className=\"modal-footer\">\n                    <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\n\n\n","import React, {useState} from 'react';\n\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nimport Preview from './Preview';\nimport InfoModal from './InfoModal';\n\nconst defaultSrc = \"https://raw.githubusercontent.com/roadmanfong/react-cropper/master/example/img/child.jpg\";\n\nexport default function CanvasArea() {\n    // CanvasArea is in charge of handling all data used by the imagecropper and the preview component\n    const [image, setImage] = useState(defaultSrc);\n\n    const [aspectRatio, setAspectRatio] = useState(1);\n\n    const [cropper, setCropper] = useState();\n    const [cropData, setCropData] = useState(\"#\");\n\n    const [hasCropped, setHasCropped] = useState(false);\n\n    const onFileChange = (event) => {\n        event.preventDefault();\n        let files;\n        if (event.dataTransfer) {\n            files = event.dataTransfer.files;\n        } else if (event.target) {\n            files = event.target.files;\n        }\n        const reader = new FileReader();\n        reader.onload = () => {\n            setImage(reader.result);\n        };\n        reader.readAsDataURL(files[0]);\n        setHasCropped(false);\n    };\n\n    const getCropData = () => {\n        if (cropper !== \"undefined\") {\n            console.log('getCropData');\n            setHasCropped(true);\n            setCropData(cropper.getCroppedCanvas().toDataURL());\n        }\n      };\n\n    const handleAspectRatioChange = (newAspectRatio) => {\n        cropper.setAspectRatio(newAspectRatio);\n    };\n\n    const handleReset = () => {\n        setHasCropped(false);\n        cropper.reset();\n    }\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                {/* Empty row to add padding to top of container */}\n            </div>\n            {/* <div className=\"row\">\n                <div className=\"col xl6 l6 m4 s4\">\n                    <div className=\"row\">\n                        <div className=\"col xl12\">\n                            <div className=\"\">\n                                <div className= \"btn file-field input-field\">\n                                    <span>Choose Image</span>\n                                    <input type=\"file\" onChange={onFileChange} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col xl12\" style={{display: \"none\"}}>\n                            <div className= \"file-path-wrapper\">\n                                <input className= \"file-path validate\" type = \"text\"\n                                    placeholder = \"File Name\" />\n                            </div>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n                \n                \n                \n            </div>\n             */}\n\n\n\n            <div className=\"row\">\n                    {/* <CropperComponent src={image} aspectRatio={aspectRatio} /> */}\n                    {hasCropped && \n                        <div className=\"center-align\">\n                            <div className=\"row\">\n                                <div className=\"col xl12 l12 m12 s12\">\n                                    <div className=\"crop-preview-container\" style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", minHeight: \"50vh\" }}>\n                                        <img id=\"croppedImage\" style={{ maxWidth: \"100%\" }} src={cropData} alt=\"cropped\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col xl12 l12 m12 s12\">\n                                    <a className=\"waves-effect waves-light btn btn-large\" style={{width: \"100%\"}} href={image} download=\"cropped.png\">Download Image</a>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col xl12 l12 m12 s12\">\n                                    <a className=\"waves-effect waves-light btn teal darken-4\" style={{width: \"100%\"}} onClick={() => setHasCropped(false)}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        \n                    }\n                    {!hasCropped && \n                        <div className=\"col xl12\">\n                            <div className=\"col xl8 l8\">\n                            <Cropper\n                                src={image}\n                                style={{ height: 400, width: \"100%\" }}\n                                preview=\".crop-preview\"\n                                initialAspectRatio={aspectRatio}\n                                aspectRatio={aspectRatio}\n                                onInitialized={(instance) => {\n                                    setCropper(instance);\n                                }} \n                            />\n                            </div>\n                            <div className=\"col xl4 l4 m12 s12\">\n                                <div className=\"hide-on-med-and-down\">\n                                    <Preview />\n                                </div>\n                                <div className=\"\">\n                                    <div className=\"\">\n                                        <div className= \"btn file-field input-field teal darken-4\" style={{width: \"100%\"}}>\n                                            <span>Choose Image</span>\n                                            <input type=\"file\" onChange={onFileChange} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"\" style={{display: \"none\"}}>\n                                    <div className= \"file-path-wrapper\">\n                                        <input className= \"file-path validate\" type = \"text\"\n                                            placeholder = \"File Name\" />\n                                    </div>\n                                </div>\n\n                                {!hasCropped && \n                                    <>\n                                        <div className=\"row\">\n                                            <div className=\"col xl12 l12 m12 s12\">\n                                                <a className=\"waves-effect waves-light btn col xl3 l3 m3 s3\" style={{textAlign: 'center'}} onClick={() => handleAspectRatioChange(1)}>1:1</a>\n                                                <a className=\"waves-effect waves-light btn col xl3 l3 m3 s3\" style={{textAlign: \"center\"}} onClick={() => handleAspectRatioChange(4/3)}>4:3</a>\n                                                <a className=\"waves-effect waves-light btn col xl3 l3 m3 s3\" style={{textAlign: \"center\"}} onClick={() => handleAspectRatioChange(9/16)}>9:16</a>\n                                                <a className=\"waves-effect waves-light btn col xl3 l3 m3 s3\" style={{textAlign: \"center\"}} onClick={() => handleAspectRatioChange(16/9)}>16:9</a>\n                                                <a className=\"waves-effect waves-light btn col xl6 l6 m6 s6\" onClick={() => handleAspectRatioChange({})}>freeform</a>\n                                                <a className=\"waves-effect waves-light btn col xl6 l6 m6 s6\" onClick={handleReset}>reset</a>\n                                            </div>\n                                        </div>\n                                    </>\n                                }\n                                <div className=\"row\">\n                                    <div className=\"col xl12 l12 m12 s12\">\n                                        {!hasCropped &&\n                                            <a className=\"black-text waves-effect waves-light btn teal lighten-4\" style={{width: \"100%\"}} onClick={getCropData}>Crop Image</a>\n                                        }\n                                        \n                                    </div>\n                                    \n                                </div>\n\n                            </div>\n                            \n                        </div>\n                    }\n                    \n            </div>\n\n            {/* Divs for responsiveness testing */}\n            {/* <div className=\"row\">\n                <div style={{backgroundColor: \"blue\", color: \"white\"}} className=\"col xl12 l1 m12 s1\">\n                    Responsiveness testing\n                </div>\n            </div> */}\n\n            {/* Modal */}\n            <InfoModal />\n            \n        </div>\n    )\n}\n\n// pass attributes to this component -> figure out if component will be redrawn with new aspectRatio\nconst CropperComponent = ({src, aspectRatio}) => {\n    return (\n        <Cropper\n                src={src}\n                style={{ height: 400, width: \"100%\" }}\n                preview=\".crop-preview\"\n                initialAspectRatio={aspectRatio}\n                aspectRatio={aspectRatio}\n                onInitialized={(instance) => {\n                    \n                  }} />\n    )\n}\n\n// Not used\nconst CroppedImage = (cropData, containerData) => {\n    return (\n        <div style={{width: \"100%\", height: containerData.height}}>\n            <img id=\"croppedImage\" style={{ maxWidth: \"100%\" }} src={cropData} alt=\"cropped\" />\n        </div>\n    )\n}","import './App.css';\nimport Navbar from './components/NavBar';\nimport Footer from './components/Footer';\nimport CanvasArea from './components/CanvasArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <CanvasArea />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// Initialize modal\ndocument.addEventListener('DOMContentLoaded', function() {\n  var options = {};\n  var elems = document.querySelectorAll('.modal');\n  var instances = M.Modal.init(elems, options);\n});\n\n// Initialize sideNav\ndocument.addEventListener('DOMContentLoaded', function() {\n  var options = {};\n  var elems = document.querySelectorAll('.sidenav');\n  var instances = M.Sidenav.init(elems, options);\n});"],"sourceRoot":""}