{"version":3,"sources":["components/NavBar.jsx","components/Footer.jsx","components/Preview.jsx","components/InfoModal.jsx","img/oranges.jpg","components/CanvasArea.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","href","id","data-target","Footer","Preview","style","width","height","float","display","alignItems","justifyContent","overflow","maxHeight","InfoModal","defaultSrc","CanvasArea","resizeWidth","useState","image","setImage","aspectRatio","reset","cropper","setCropper","cropData","setCropData","hasCropped","setHasCropped","handleAspectRatioChange","newAspectRatio","setAspectRatio","minHeight","maxWidth","src","alt","download","onClick","preview","initialAspectRatio","onInitialized","instance","type","onChange","event","files","preventDefault","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","placeholder","textAlign","getCroppedCanvas","toDataURL","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","addEventListener","elems","querySelectorAll","M","Modal","init","Sidenav"],"mappings":"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","file":"static/js/main.0dc4caf2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function NavBar() {\n    return (\n        <>\n            <nav>\n                <div className=\"nav-wrapper\">\n                    <a href=\"#\" className=\"brand-logo center\"><i className=\"material-icons\">crop</i>React Cropper</a>\n                    <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\n                        <li><a data-target=\"modal1\" className=\"waves-effect waves-light btn btn-large modal-trigger\"><i className=\"material-icons\">help_outline</i></a></li>\n                    </ul>\n                    <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\n                    <ul className=\"right hide-on-med-and-down\">\n                        {/* <li><a href=\"https://www.linkedin.com/in/danieloram1/\">About Me</a></li> */}\n                        <li><a href=\"https://github.com/DanielOram/react-image-cropper\">Github</a></li>\n                        <li><a href=\"https://stackoverflow.com/users/4486146/danoram\">StackOverflow</a></li>\n                        <li><a href=\"https://www.linkedin.com/in/danieloram1/\">Linked In</a></li>\n                    </ul>\n                </div>\n            </nav>\n            <ul className=\"sidenav\" id=\"mobile-demo\">\n                <li><a data-target=\"modal1\" className=\"waves-effect waves-light btn btn-large modal-trigger\"><span>How to Use<i className=\"material-icons right\">help_outline</i></span></a></li>\n                {/* <li><a href=\"\">About Me<i className=\"material-icons right\">info_outline</i></a></li> */}\n                <li><a href=\"https://github.com/DanielOram/react-image-cropper\">Github<i className=\"material-icons right\">code</i></a></li>\n                <li><a href=\"https://stackoverflow.com/users/4486146/danoram\">StackOverflow<i className=\"material-icons right\">code</i></a></li>\n                <li><a href=\"https://www.linkedin.com/in/danieloram1/\">Linked In<i className=\"material-icons right\">info_outline</i></a></li>\n            </ul>\n        </>\n    )\n}","import React from \"react\";\n\nexport default function Footer() {\n    return (\n        <footer className=\"page-footer\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col l6 s12\">\n                <h5 className=\"white-text\">Created by Daniel Oram.</h5>\n                <p className=\"grey-text text-lighten-4\">A webapp for cropping and downloading images using React.</p>\n              </div>\n              <div className=\"col l4 offset-l2 s12\">\n                <h5 className=\"white-text\">Links</h5>\n                <ul>\n                  {/* <li><a className=\"grey-text text-lighten-3\" href=\"https://www.linkedin.com/in/danieloram1/\">About Me</a></li> */}\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://github.com/DanielOram/react-image-cropper\">Github</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://stackoverflow.com/users/4486146/danoram\">StackOverflow</a></li>\n                  <li><a className=\"grey-text text-lighten-3\" href=\"https://www.linkedin.com/in/danieloram1/\">Linked In</a></li>\n                  \n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer-copyright\">\n            <div className=\"container\">\n            Â© 2021 Daniel Oram\n            {/* <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a> */}\n            </div>\n          </div>\n        </footer>\n    )\n}","import React from 'react';\n\nexport default function Preview() {\n\n    return (\n        <>\n            <div className=\"crop-preview-container\" style={{ width: \"100%\", height: 200, float: \"right\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                <div \n                    className=\"crop-preview\"\n                    style={{width: \"100%\", height: \"inherit\", overflow: \"hidden\", maxHeight: \"100%\" }}>\n                </div>\n            </div>\n        </>\n        \n    )\n}","import React from 'react';\n\nexport default function InfoModal() {\n    return (\n        <div>\n            {/* Modal Content */}\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h4>React Cropper</h4>\n                    <p>Double click the cropping canvas to toggle between moving the selected image and creating a cropping area.</p>\n                    <p>Press 'RESET' to return the cropping canvas back to it's default position and aspect ratio.</p>\n                    <p>Press 'FREEFORM' to be able to manually change the aspect ratio of the crop.</p>\n                    <p>Scroll to zoom in and out.</p>\n                </div>\n                <div className=\"modal-footer\">\n                    <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\n\n\n","export default __webpack_public_path__ + \"static/media/oranges.789a5bbd.jpg\";","import React, {useState} from 'react';\n\n\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nimport Preview from './Preview';\nimport InfoModal from './InfoModal';\nimport DefaultImage from '../img/oranges.jpg';\n\nconst defaultSrc = DefaultImage;\n\nexport default function CanvasArea(resizeWidth) {\n    // CanvasArea is in charge of handling all data used by the imagecropper and the preview component\n    const [image, setImage] = useState(defaultSrc);\n\n    const [aspectRatio, setAspectRatio] = useState(1);\n\n    // in order to stop error when using useEffect the initial state includes an empty function for reset.\n    const [cropper, setCropper] = useState(\n        {\n            reset: () => {}\n        }\n    );\n    const [cropData, setCropData] = useState(\"#\");\n\n    const [hasCropped, setHasCropped] = useState(false);\n\n    const onFileChange = (event) => {\n        event.preventDefault();\n        let files;\n        if (event.dataTransfer) {\n            files = event.dataTransfer.files;\n        } else if (event.target) {\n            files = event.target.files;\n        }\n        const reader = new FileReader();\n        reader.onload = () => {\n            setImage(reader.result);\n        };\n        reader.readAsDataURL(files[0]);\n        setHasCropped(false);\n    };\n\n    const getCropData = () => {\n        if (cropper !== \"undefined\") {\n            setHasCropped(true);\n            setCropData(cropper.getCroppedCanvas().toDataURL());\n        }\n      };\n\n    const handleAspectRatioChange = (newAspectRatio) => {\n        cropper.setAspectRatio(newAspectRatio);\n    };\n\n    const handleReset = () => {\n        setHasCropped(false);\n        cropper.reset();\n    }\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                {/* Empty row to add padding to top of container */}\n            </div>\n            <div className=\"row\">\n                    {hasCropped && \n                        <div className=\"center-align\">\n                            <div className=\"row\">\n                                <div className=\"col xl12 l12 m12 s12\">\n                                    <div className=\"crop-preview-container\" style={{width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", minHeight: \"50vh\" }}>\n                                        <img id=\"croppedImage\" style={{ maxWidth: \"100%\" }} src={cropData} alt=\"cropped\" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col xl12 l12 m12 s12\">\n                                    <a className=\"waves-effect waves-light btn btn-large\" style={{width: \"100%\"}} href={image} download=\"cropped.png\">Download Image</a>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col xl12 l12 m12 s12\">\n                                    <a className=\"waves-effect waves-light btn teal darken-4\" style={{width: \"100%\"}} onClick={() => setHasCropped(false)}>Back</a>\n                                </div>\n                            </div>\n                        </div>\n                        \n                    }\n                    {!hasCropped && \n                        <div className=\"col xl12\">\n                            <div className=\"col xl8 l8 m12 s12\">\n                            <Cropper\n                                src={image}\n                                style={{ height: 400, width: \"100%\" }}\n                                preview=\".crop-preview\"\n                                // responsive={true}\n                                initialAspectRatio={aspectRatio}\n                                aspectRatio={aspectRatio}\n                                onInitialized={(instance) => {\n                                    setCropper(instance);\n                                }} \n                            />\n                            </div>\n                            <div className=\"col xl4 l4 m12 s12\">\n                                <div className=\"hide-on-med-and-down\">\n                                    <Preview />\n                                </div>\n                                <div className=\"\">\n                                    <div className=\"\">\n                                        <div className= \"btn file-field input-field teal darken-4\" style={{width: \"100%\"}}>\n                                            <span>Choose Image</span>\n                                            <input type=\"file\" onChange={onFileChange} />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"\" style={{display: \"none\"}}>\n                                    <div className= \"file-path-wrapper\">\n                                        <input className= \"file-path validate\" type = \"text\"\n                                            placeholder = \"File Name\" />\n                                    </div>\n                                </div>\n\n                                {!hasCropped && \n                                    <>\n                                        <div className=\"row\">\n                                            <div className=\"col xl12 l12 m12 s12\">\n                                                <a className=\"waves-effect waves-light btn col xl3 l3 m3 s3\" style={{textAlign: 'center'}} onClick={() => handleAspectRatioChange(1)}>1:1</a>\n                                                <a className=\"waves-effect waves-light btn col xl3 l3 m3 s3\" style={{textAlign: \"center\"}} onClick={() => handleAspectRatioChange(4/3)}>4:3</a>\n                                                <a className=\"waves-effect waves-light btn col xl3 l3 m3 s3\" style={{textAlign: \"center\"}} onClick={() => handleAspectRatioChange(9/16)}>9:16</a>\n                                                <a className=\"waves-effect waves-light btn col xl3 l3 m3 s3\" style={{textAlign: \"center\"}} onClick={() => handleAspectRatioChange(16/9)}>16:9</a>\n                                                <a className=\"waves-effect waves-light btn col xl6 l6 m6 s6\" onClick={() => handleAspectRatioChange({})}>freeform</a>\n                                                <a className=\"waves-effect waves-light btn col xl6 l6 m6 s6\" onClick={handleReset}>reset</a>\n                                            </div>\n                                        </div>\n                                    </>\n                                }\n                                <div className=\"row\">\n                                    <div className=\"col xl12 l12 m12 s12\">\n                                        {!hasCropped &&\n                                            <a className=\"black-text waves-effect waves-light btn teal lighten-4\" style={{width: \"100%\"}} onClick={getCropData}>Crop Image</a>\n                                        }\n                                        \n                                    </div>\n                                    \n                                </div>\n\n                            </div>\n                            \n                        </div>\n                    }\n                    \n            </div>\n            <InfoModal />  \n        </div>\n    )\n}","import './App.css';\nimport Navbar from './components/NavBar';\nimport Footer from './components/Footer';\nimport CanvasArea from './components/CanvasArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <CanvasArea />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// Initialize modal\ndocument.addEventListener('DOMContentLoaded', function() {\n  var options = {};\n  var elems = document.querySelectorAll('.modal');\n  var instances = M.Modal.init(elems, options);\n});\n\n// Initialize sideNav\ndocument.addEventListener('DOMContentLoaded', function() {\n  var options = {};\n  var elems = document.querySelectorAll('.sidenav');\n  var instances = M.Sidenav.init(elems, options);\n});"],"sourceRoot":""}